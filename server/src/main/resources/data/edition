v2:
方案：数据和统计量都是bin:z2的方式进行存储，时间段越多，scan越多。
效果：bin比较少时（8），数量计算和热力图合成耗时1秒以内，但是数据获取耗时1秒以上。bin比较大时，热力图和真实数据的生成都变慢
问题：以瓦片为粒度自适应切换地图形式存在多个问题：同一zoom的不同瓦片展示形式不同会有断裂感。数据存储占用空间大。
待优化：
     以时间bin聚合统计量的时候，不止聚合count，还聚合z2，然后保存每个瓦片中的z2:count，后续只需要根据bin进行MultiGet就行了。
     真实数据以时空瓦片为单位进行压缩存储，降低存储空间提高查询效率，变成多个bin的Scan。
     以zoom+bin的方式统计瓦片数量和数据总量，用来自动切换地图展示形式。


v3:
写：
    STFeature ---- (Z2, Bin)->STFeature ----- (Z2,Bin)->Iterator[STFeature] ----- 数据压缩写入
    (Z2, Bin)->Count ---- Iterator(SubZ2,Count) ------ 统计量压缩存储 (累加器统计zoom的瓦片数量和数据总量)
数： 根据zoom对多个bin中的瓦片count和数据count进行获取MultiGet，然后计算平均每个瓦片的数据量，决定展示形式
读： 读取统计量时，根据z2和多个bin，执行MultiGet获取多个统计量，然后合成热力瓦片，或者时序图
    读取真实数据时，根据minZ2~maxZ2在多个bin内生成多个scan，然后将获取到的数据坐标转换后生产瓦片。

技术实现：位置数据时空包压缩和解压；统计量合并；

位置数据可视化的特点：无差别，整存整取
方案优势就是利用位置数据可视化的特点，提出了优化方案


v3效果：
      1. 统计量稍大，但是加载到内存中之后，智能切换和热力生成只需1毫秒，很丝滑。
      2. 时间段大了之后，多个scan比较耗时，数据读取较慢，考虑用multiget优化
